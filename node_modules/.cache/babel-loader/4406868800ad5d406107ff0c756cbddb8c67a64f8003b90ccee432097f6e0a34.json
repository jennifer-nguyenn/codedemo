{"ast":null,"code":"import styled,{css}from'styled-components';import{Text}from'../Typography';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ButtonWrapper=styled.div`\n  ${_ref=>{let{variant}=_ref;return variant==='gradient'&&css`\n      background: var(--gradient-rewards);\n      border-radius: var(--radius-medium);\n      padding: 1px;\n    `;}}\n`;const Button=styled.button`\n  width: 100%;\n  background: ${_ref2=>{let{variant}=_ref2;return variant==='default'?'var(--color-card-bg)':'transparent';}};\n  border: none;\n  border-radius: var(--radius-medium);\n  padding: var(--space-2);\n  cursor: pointer;\n  transition: opacity 0.2s ease-in-out;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--space-2);\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;const ButtonText=styled(Text)`\n  color: var(--color-text-primary);\n  text-align: center;\n  font-weight: var(--font-weight-bold);\n`;/**\n * RewardsActionButton component\n *\n * A button component specifically designed for the rewards section actions.\n * Supports default and gradient variants with consistent styling.\n */export const RewardsActionButton=_ref3=>{let{label,onClick,variant='default',icon}=_ref3;const buttonContent=/*#__PURE__*/_jsxs(_Fragment,{children:[icon&&/*#__PURE__*/_jsx(\"span\",{style:{display:'flex',alignItems:'center'},children:icon}),/*#__PURE__*/_jsx(ButtonText,{variant:\"regular\",children:label})]});if(variant==='gradient'){return/*#__PURE__*/_jsx(ButtonWrapper,{variant:variant,children:/*#__PURE__*/_jsx(Button,{variant:variant,onClick:onClick,type:\"button\",\"aria-label\":label,children:buttonContent})});}return/*#__PURE__*/_jsx(Button,{variant:variant,onClick:onClick,type:\"button\",\"aria-label\":label,children:buttonContent});};","map":{"version":3,"names":["styled","css","Text","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ButtonWrapper","div","_ref","variant","Button","button","_ref2","ButtonText","RewardsActionButton","_ref3","label","onClick","icon","buttonContent","children","style","display","alignItems","type"],"sources":["/Users/jennifernguyen/designtest-1/src/components/Button/RewardsActionButton.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { Text } from '../Typography';\nimport { ReactNode } from 'react';\n\ntype ButtonVariant = 'default' | 'gradient';\n\ninterface RewardsActionButtonProps {\n  /** The text to display in the button */\n  label: string;\n  /** Optional click handler */\n  onClick?: () => void;\n  /** Button style variant */\n  variant?: ButtonVariant;\n  /** Optional icon to display before the label */\n  icon?: ReactNode;\n}\n\nconst ButtonWrapper = styled.div<{ variant: ButtonVariant }>`\n  ${({ variant }) =>\n    variant === 'gradient' &&\n    css`\n      background: var(--gradient-rewards);\n      border-radius: var(--radius-medium);\n      padding: 1px;\n    `}\n`;\n\nconst Button = styled.button<{ variant: ButtonVariant }>`\n  width: 100%;\n  background: ${({ variant }) =>\n    variant === 'default' ? 'var(--color-card-bg)' : 'transparent'};\n  border: none;\n  border-radius: var(--radius-medium);\n  padding: var(--space-2);\n  cursor: pointer;\n  transition: opacity 0.2s ease-in-out;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--space-2);\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ButtonText = styled(Text)`\n  color: var(--color-text-primary);\n  text-align: center;\n  font-weight: var(--font-weight-bold);\n`;\n\n/**\n * RewardsActionButton component\n *\n * A button component specifically designed for the rewards section actions.\n * Supports default and gradient variants with consistent styling.\n */\nexport const RewardsActionButton: React.FC<RewardsActionButtonProps> = ({\n  label,\n  onClick,\n  variant = 'default',\n  icon,\n}): JSX.Element => {\n  const buttonContent = (\n    <>\n      {icon && (\n        <span style={{ display: 'flex', alignItems: 'center' }}>{icon}</span>\n      )}\n      <ButtonText variant=\"regular\">{label}</ButtonText>\n    </>\n  );\n\n  if (variant === 'gradient') {\n    return (\n      <ButtonWrapper variant={variant}>\n        <Button\n          variant={variant}\n          onClick={onClick}\n          type=\"button\"\n          aria-label={label}\n        >\n          {buttonContent}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  return (\n    <Button\n      variant={variant}\n      onClick={onClick}\n      type=\"button\"\n      aria-label={label}\n    >\n      {buttonContent}\n    </Button>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,EAAIC,GAAG,KAAQ,mBAAmB,CAC/C,OAASC,IAAI,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAgBrC,KAAM,CAAAC,aAAa,CAAGT,MAAM,CAACU,GAA+B;AAC5D,IAAIC,IAAA,MAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,OACZ,CAAAC,OAAO,GAAK,UAAU,EACtBX,GAAG;AACP;AACA;AACA;AACA,KAAK;AACL,CAAC,CAED,KAAM,CAAAY,MAAM,CAAGb,MAAM,CAACc,MAAkC;AACxD;AACA,gBAAgBC,KAAA,MAAC,CAAEH,OAAQ,CAAC,CAAAG,KAAA,OACxB,CAAAH,OAAO,GAAK,SAAS,CAAG,sBAAsB,CAAG,aAAa;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAI,UAAU,CAAGhB,MAAM,CAACE,IAAI,CAAC;AAC/B;AACA;AACA;AACA,CAAC,CAED;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAe,mBAAuD,CAAGC,KAAA,EAKpD,IALqD,CACtEC,KAAK,CACLC,OAAO,CACPR,OAAO,CAAG,SAAS,CACnBS,IACF,CAAC,CAAAH,KAAA,CACC,KAAM,CAAAI,aAAa,cACjBd,KAAA,CAAAF,SAAA,EAAAiB,QAAA,EACGF,IAAI,eACHjB,IAAA,SAAMoB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAH,QAAA,CAAEF,IAAI,CAAO,CACrE,cACDjB,IAAA,CAACY,UAAU,EAACJ,OAAO,CAAC,SAAS,CAAAW,QAAA,CAAEJ,KAAK,CAAa,CAAC,EAClD,CACH,CAED,GAAIP,OAAO,GAAK,UAAU,CAAE,CAC1B,mBACER,IAAA,CAACK,aAAa,EAACG,OAAO,CAAEA,OAAQ,CAAAW,QAAA,cAC9BnB,IAAA,CAACS,MAAM,EACLD,OAAO,CAAEA,OAAQ,CACjBQ,OAAO,CAAEA,OAAQ,CACjBO,IAAI,CAAC,QAAQ,CACb,aAAYR,KAAM,CAAAI,QAAA,CAEjBD,aAAa,CACR,CAAC,CACI,CAAC,CAEpB,CAEA,mBACElB,IAAA,CAACS,MAAM,EACLD,OAAO,CAAEA,OAAQ,CACjBQ,OAAO,CAAEA,OAAQ,CACjBO,IAAI,CAAC,QAAQ,CACb,aAAYR,KAAM,CAAAI,QAAA,CAEjBD,aAAa,CACR,CAAC,CAEb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}